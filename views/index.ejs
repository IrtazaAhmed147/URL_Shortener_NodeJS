<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/style.css">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Afacad+Flux:wght@100..1000&display=swap" rel="stylesheet">
    <title>Url Shortener</title>
</head>

<body>
    <div class="container">
        <h1>Url Shortener</h1>
        <form action="/" method="post">
            <div>
                <label for="url">Enter URL:</label>
                <input type="url" name="url" id="url" required>
            </div>
            <div>
                <label for="shortCode">Enter ShortCode:</label>
                <input type="text" name="shortCode" id="shortCode" required>
            </div>
            <button type="submit">Shorten</button>
        </form>

        <h2>Shortened URLs</h2>
        <ul>

            <!-- Object.entries(links).map(([shortCode, url]) => `<li><a target="_blank" href="/${shortCode}">${hosts}/${shortCode}</a> - ${url}<li>`).join(" ") -->

            <% Object.entries(links).map(([shortCode, url])=> { %>

                <%  const truncatedUrl = url.length > 30 ? `${url.slice(0, 30)}...` : url %>
                <li>
                    <a href="/<%= shortCode%>" target="_blank">
                        <%= hosts %>/<%= shortCode %>
                    </a> - <%= truncatedUrl %>
                </li>
                <% }) %>
        </ul>
    </div>


    <!-- <script>
        const getData = async () => {
            console.log('adfsd');

            try {
                const response = await fetch('/links')
                const links = await response.json()
                console.log("response ==>>", links);
                const list = document.getElementById('Shortened-urls')
                list.innerHTML = ''
                
                for(const [shortCode, url] of Object.entries(links)) {
                    const li = document.createElement('li')
                    const truncatedUrl = url.length >= 30 ? `${url.slice(0, 30)}...` : url
                    li.innerHTML = `<a target="_blank" href="/${shortCode}">${window.location.origin}/${shortCode}</a> - ${truncatedUrl}`
                    list.appendChild(li)
                }

            } catch (error) {
                console.log(error);

            }
        }
        getData()

        document.getElementById('shorten-form').addEventListener('submit', async (event) => {
            event.preventDefault()
            const formData = new FormData(event.target)
            const url = formData.get('url')
            const shortCode = formData.get('shortCode')
            console.log(url, shortCode);

            try {
                const response = await fetch('/shorten', {
                    method: 'POST',
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ url, shortCode })
                })

                if (response.ok) {
                    getData()
                    alert('successfully')
                    event.target.reset()
                } else {
                    const errorMessage = await response.text()
                    alert(errorMessage)
                }
            } catch (error) {
                console.log(error);

            }
        })

    </script> -->
</body>

</html>